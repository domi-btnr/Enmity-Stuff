var $="GlobalBadges",U="1.2.6",O="Adds global badges from other client mods",V=[{name:"HypedDomi",id:"354191516979429376"}],j="#E54B4B",Y="https://raw.githubusercontent.com/domi-btnr/Enmity-Stuff/main/dist/GlobalBadges.js",k="https://github.com/domi-btnr/Enmity-Stuff/tree/main/GlobalBadges",R=["Fixed Badges not appearing on Profiles"],M="23a6e3a68c54710e63d9a5bea8e97866b9e1420d",v={name:$,version:U,description:O,authors:V,color:j,rawUrl:Y,sourceUrl:k,changelog:R,hash:M};function T(e,o,i){window.enmity.settings.set(e,o,i)}function b(e,o,i){return window.enmity.settings.get(e,o,i)}const{components:t}=window.enmity;t.Alert,t.Button,t.FlatList;const z=t.Image;t.ImageBackground,t.KeyboardAvoidingView,t.Modal,t.Pressable,t.RefreshControl;const G=t.ScrollView;t.SectionList,t.StatusBar,t.StyleSheet,t.Switch;const h=t.Text;t.TextInput,t.TouchableHighlight;const W=t.TouchableOpacity;t.TouchableWithoutFeedback,t.Touchable;const u=t.View;t.VirtualizedList,t.Form,t.FormArrow,t.FormCTA,t.FormCTAButton,t.FormCardSection,t.FormCheckbox,t.FormDivider,t.FormHint,t.FormIcon,t.FormInput,t.FormLabel,t.FormRadio;const d=t.FormRow,B=t.FormSection;t.FormSelect,t.FormSubLabel;const _=t.FormSwitch;t.FormTernaryCheckBox,t.FormText,t.FormTextColors,t.FormTextSizes;function K(e){window.enmity.plugins.registerPlugin(e)}function X(...e){return window.enmity.modules.getByProps(...e)}function J(...e){return window.enmity.modules.getByName(...e)}window.enmity.modules.common;const g=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const q=window.enmity.modules.common.Toasts,x=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const Q=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const Z=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function ee(e){return window.enmity.patcher.create(e)}const{native:E}=window.enmity;function te(){E.reload()}E.version,E.build,E.device,E.version;const D={name:"",version:"",rawUrl:"",changelog:[""],hash:"",remoteHash:null,remoteVersion:null,remoteChangelog:[""],create({name:e,version:o,rawUrl:i,changelog:s,hash:a}){if(!e||!o||!i||!s||!a)return console.error(`[${e||__filename}] Missing parameters in constructor`);this.name=e,this.version=o,this.rawUrl=i,this.changelog=s,this.hash=a,b(e,"_didUpdate",!1)||(b(e,"_changelog",o)!==o&&this.showChangelog(),b(e,"autoUpdateCheck",!0)&&this.hash!=="DEBUG"&&this.checkForUpdates()),T(e,"_didUpdate",!1)},showChangelog(){!this.changelog||x.show({title:`${this.name} - v${this.version}`,body:`- ${this.changelog.join(`
- `)}`,confirmText:"OK",onConfirm:()=>T(this.name,"_changelog",this.version)})},async checkForUpdates(e=!1){var o,i,s,a,w,l;const S=await fetch(`${this.rawUrl}?${Math.random()}`);if(!S.ok)return console.error(`[${this.name}] Failed to fetch remote version`);const m=await S.text(),c=(o=m.match(/hash:(\w+)/))==null?void 0:o[1],r=(i=m.match(new RegExp(`${c}="([^,"]+)"`)))==null?void 0:i[1];r?this.remoteHash=r!=null?r:"0AB1C2":console.warn(`[${this.name}] Failed to fetch remote hash`);const C=(s=m.match(/version:(\w+)/))==null?void 0:s[1],y=(a=m.match(new RegExp(`${C}="([^,"]+)"`)))==null?void 0:a[1];y?this.remoteVersion=y!=null?y:"0.0.0":console.warn(`[${this.name}] Failed to fetch remote version`);const f=(w=m.match(/changelog:(\w+)/))==null?void 0:w[1],P=(l=m.match(new RegExp(`${f}=\\["(.*?)"\\]`)))==null?void 0:l[0];if(P?this.remoteChangelog=JSON.parse(P.replace(`${f}=`,"")):console.warn(`[${this.name}] Failed to fetch remote changelog`),this.remoteHash&&this.remoteVersion){const F=this.version.split(".").map(Number),A=this.remoteVersion.split(".").map(Number);for(let p=0;p<F.length;p++){if(A[p]>F[p])return this.showUpdateDialog({version:this.remoteVersion,changelog:this.remoteChangelog});if(A[p]<F[p])return console.log(`[${this.name}] Remote version is older than local version`)}if(this.remoteHash!==this.hash)return this.showUpdateDialog({hash:this.remoteHash})}!e||x.show({title:"Plugin Updater",body:`No update available for ${this.name}`,confirmText:"OK"})},showUpdateDialog({version:e,hash:o,changelog:i}){if(!e&&!o)return console.error(`[${this.name}] Missing parameters in showUpdateDialog()`);let s="";e?s=`New Version for ${this.name} is available!`:s=`New Build for ${this.name} is available!`,s+=`
Would you like to update now?`,i&&(s+=`

Changelog:
- ${i.join(`
- `)}`),x.show({title:"Plugin Updater",body:s,confirmText:"Update",cancelText:"No",onConfirm:()=>{T(this.name,"_didUpdate",!0),this.installPlugin(!!o)}})},installPlugin(e=!1){var o;const i=e?"updated Build":"updated Version",s=e?`\`${(o=this.remoteHash)==null?void 0:o.slice(0,7)}\``:this.remoteVersion;window.enmity.plugins.installPlugin(`${this.rawUrl}?${Math.random()}`,({data:a})=>{a==="installed_plugin"||a==="overridden_plugin"?x.show({title:`Installed ${this.name} v${this.remoteVersion}`,body:`Successfully ${i} to **${s}**.
Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Later",onConfirm:te}):console.error(`[${this.name}] Failed to install v${s}`)})}},N=X("transitionToGuild","openURL");D.create(v);var oe=({settings:e})=>{const o=Z.createThemedStyleSheet({item:{color:g.ThemeColorMap.TEXT_MUTED},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},main_text:{opacity:.975,letterSpacing:.25},header:{color:g.ThemeColorMap.HEADER_PRIMARY,fontFamily:g.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:g.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),[i,s]=n.useState(),[a,w]=n.useState();return n.createElement(n.Fragment,null,n.createElement(G,{onTouchStart:l=>{s(l.nativeEvent.pageX),w(l.nativeEvent.pageY)},onTouchEnd:l=>{i-l.nativeEvent.pageX<-100&&a-l.nativeEvent.pageY<40&&a-l.nativeEvent.pageY>-40&&Q.pop()}},n.createElement(u,null,n.createElement(u,{style:o.text_container},n.createElement(h,{style:[o.main_text,o.header]},$),n.createElement(u,{style:{flexDirection:"row"}},n.createElement(h,{style:[o.main_text,o.sub_header]},"Author:"),n.createElement(h,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:g.Fonts.DISPLAY_BOLD}]},` ${V.map(l=>l.name).join(", ")}`)),n.createElement(u,{style:{flexDirection:"row"}},n.createElement(h,{style:[o.main_text,o.sub_header]},"Version:"),n.createElement(h,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:g.Fonts.DISPLAY_BOLD}]},` ${U}`)),n.createElement(u,{style:{flexDirection:"row"}},n.createElement(h,{style:[o.main_text,o.sub_header]},"Hash:"),n.createElement(h,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:g.Fonts.DISPLAY_BOLD}]},` ${M.slice(0,7)}`)))),n.createElement(B,{title:"Badges"},n.createElement(d,{label:"Prefix",subLabel:"Shows the Mod as Prefix",trailing:n.createElement(_,{value:e.getBoolean("showPrefix",!0),onValueChange:()=>e.toggle("showPrefix",!0)})}),n.createElement(d,{label:"Custom Badges",subLabel:"Show Custom Badges",trailing:n.createElement(_,{value:e.getBoolean("showCustom",!0),onValueChange:()=>e.toggle("showCustom",!0)})})),n.createElement(B,{title:"Updates"},n.createElement(d,{label:"Check for Updates on startup",subLabel:"Checks automatically for updates when starting the Plugin",trailing:n.createElement(_,{value:e.getBoolean("autoUpdateCheck",!0),onValueChange:()=>e.toggle("autoUpdateCheck",!0)})}),n.createElement(d,{label:"Check for Updates",trailing:d.Arrow,onPress:()=>D.checkForUpdates(!0)}),n.createElement(d,{label:"Show Changelog",subLabel:`Shows the changelog for v${U}`,trailing:d.Arrow,onPress:()=>D.showChangelog(),disabled:!R.length})),n.createElement(B,{title:"Source"},n.createElement(d,{label:"Source",subLabel:`See the Source Code for ${$}`,trailing:d.Arrow,onPress:()=>N==null?void 0:N.openURL(k)}))))};const I="https://clientmodbadges-api.herokuapp.com/",L=new Map,ne=1e3*60*15,ie=e=>{const o=L.get(e);if(!L.has(e)||o&&o.expires<Date.now())fetch(`${I}users/${e}`).then(i=>i.json()).then(i=>(L.set(e,{badges:i,expires:Date.now()+ne}),i));else if(o)return o.badges},ae=({name:e,img:o})=>{const i={wrapper:{alignItems:"center",flexDirection:"row",justifyContent:"flex-end"},image:{width:24,height:24,resizeMode:"contain",marginHorizontal:2}};return n.createElement(u,{style:i.wrapper},n.createElement(W,{onPress:()=>q.open({content:e,source:{uri:o}})},n.createElement(z,{style:i.image,source:{uri:o}})))},H=ee(v.name),se={...v,onStart(){const e=J("ProfileBadges",{default:!1});H.after(e,"default",(o,[{user:{id:i},style:s}],a)=>{const w=a;a||(a=n.createElement(u,{style:[s,{flexDirection:"row",flexWrap:"wrap",alignItems:"flex-end",justifyContent:"flex-end",paddingVertical:2}],accessibilityRole:"list",accessibilityLabel:"User Badges"}),a.props.children=[]);const[l,S]=n.useState({});n.useEffect(()=>{var c;return S((c=ie(i))!=null?c:{})},[]);const m=[];if(!l||(Object.keys(l).forEach(c=>{c.toLowerCase()!=="enmity"&&l[c].forEach(r=>{if(typeof r=="string"){const f={hunter:"Bug Hunter",early:"Early User"};r={name:f[r]?f[r]:r,badge:`${I}badges/${c}/${r.replace(c,"").trim().split(" ")[0]}`}}else typeof r=="object"&&(r.custom=!0);if(!b(v.name,"showCustom",!0)&&r.custom)return;const C=r.name.replace(c,"").trim(),y=b(v.name,"showPrefix",!0)?c:"";r.custom||(r.name=`${y} ${C.charAt(0).toUpperCase()+C.slice(1)}`),m.push(n.createElement(ae,{name:r.name,img:r.badge}))})}),!m.length)||(a.props.badges?a.props.badges.push(...m):a.props.children.push(...m),!w))return a})},onStop(){H.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(oe,{settings:e})}};K(se);
