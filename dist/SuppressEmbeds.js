const{components:t}=window.enmity;t.Alert,t.Button,t.FlatList;const J=t.Image;t.ImageBackground,t.KeyboardAvoidingView,t.Modal,t.Pressable,t.RefreshControl;const q=t.ScrollView;t.SectionList,t.StatusBar,t.StyleSheet,t.Switch;const g=t.Text;t.TextInput,t.TouchableHighlight,t.TouchableOpacity,t.TouchableWithoutFeedback,t.Touchable;const b=t.View;t.VirtualizedList,t.Form,t.FormArrow,t.FormCTA,t.FormCTAButton,t.FormCardSection,t.FormCheckbox,t.FormDivider,t.FormHint,t.FormIcon,t.FormInput,t.FormLabel,t.FormRadio;const p=t.FormRow,B=t.FormSection;t.FormSelect,t.FormSubLabel;const Q=t.FormSwitch;t.FormTernaryCheckBox,t.FormText,t.FormTextColors,t.FormTextSizes;const $={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,o)=>window.enmity.modules.filters.byName(e,o),byTypeName:(e,o)=>window.enmity.modules.filters.byTypeName(e,o),byDisplayName:(e,o)=>window.enmity.modules.filters.byDisplayName(e,o)};function Z(...e){return window.enmity.modules.bulk(...e)}function V(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const h=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts;const F=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const ee=window.enmity.modules.common.REST;window.enmity.modules.common.Settings;const oe=window.enmity.modules.common.Users,te=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme;const ne=window.enmity.modules.common.Linking,H=window.enmity.modules.common.StyleSheet,ie=window.enmity.modules.common.ColorMap;window.enmity.modules.common.Components;const O=window.enmity.modules.common.Locale;window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;const{ActionSheetRow:x}=V("ActionSheetRow"),{FormRow:Y}=V("FormRow");var se=({key:e,label:o,color:i,icon:a,onPress:s})=>{const c=H.createThemedStyleSheet({iconComponent:{width:24,height:24,tintColor:ie.colors.INTERACTIVE_NORMAL}});return x?n.createElement(x,{label:o,...e&&{key:e},...i&&{variant:i},icon:n.createElement(x.Icon,{source:a,IconComponent:()=>n.createElement(J,{resizeMode:"cover",source:a,style:[c.iconComponent,i==="danger"&&{tintColor:"#f9777b"}]})}),onPress:s}):n.createElement(Y,{label:o,leading:n.createElement(Y.Icon,{source:a}),onPress:s})},U="SuppressEmbeds",L="1.1.1",ae="Allows you to Suppress/Unsuppress Embeds",z=[{name:"domi.btnr",id:"354191516979429376"}],re="#E54B4B",le="https://raw.githubusercontent.com/domi-btnr/Enmity-Stuff/main/dist/SuppressEmbeds.js",j="https://github.com/domi-btnr/Enmity-Stuff/tree/main/SuppressEmbeds",G=["Fixed for Discords ActionSheet redesign"],K="e4a08b9b93658d20f55861ca73d0a26d487f538e",A={name:U,version:L,description:ae,authors:z,color:re,rawUrl:le,sourceUrl:j,changelog:G,hash:K};function W(e){return window.enmity.assets.getIDByName(e)}function me(e){window.enmity.plugins.registerPlugin(e)}function ce(e){return window.enmity.patcher.create(e)}function de(e,o,i){return window.enmity.utilities.findInReactTree(e,o,i)}const{native:S}=window.enmity;function he(){S.reload()}S.version,S.build,S.device,S.version;function D(e,o,i){window.enmity.settings.set(e,o,i)}function P(e,o,i){return window.enmity.settings.get(e,o,i)}const R={name:"",version:"",rawUrl:"",changelog:[""],hash:"",remoteHash:null,remoteVersion:null,remoteChangelog:[""],create({name:e,version:o,rawUrl:i,changelog:a,hash:s}){if(!e||!o||!i||!a||!s)return console.error(`[${e||__filename}] Missing parameters in constructor`);this.name=e,this.version=o,this.rawUrl=i,this.changelog=a,this.hash=s,P(e,"_didUpdate",!1)||(P(e,"_changelog",o)!==o&&this.showChangelog(),P(e,"autoUpdateCheck",!0)&&this.hash!=="DEBUG"&&this.checkForUpdates()),D(e,"_didUpdate",!1)},showChangelog(){!this.changelog||F.show({title:`${this.name} - v${this.version}`,body:`- ${this.changelog.join(`
- `)}`,confirmText:"OK",onConfirm:()=>D(this.name,"_changelog",this.version)})},async checkForUpdates(e=!1){var o,i,a,s,c,r;const T=await fetch(`${this.rawUrl}?${Math.random()}`);if(!T.ok)return console.error(`[${this.name}] Failed to fetch remote version`);const u=await T.text(),y=(o=u.match(/hash:(\w+)/))==null?void 0:o[1],d=(i=u.match(new RegExp(`${y}="([^,"]+)"`)))==null?void 0:i[1];d?this.remoteHash=d!=null?d:"0AB1C2":console.warn(`[${this.name}] Failed to fetch remote hash`);const _=(a=u.match(/version:(\w+)/))==null?void 0:a[1],m=(s=u.match(new RegExp(`${_}="([^,"]+)"`)))==null?void 0:s[1];m?this.remoteVersion=m!=null?m:"0.0.0":console.warn(`[${this.name}] Failed to fetch remote version`);const E=(c=u.match(/changelog:(\w+)/))==null?void 0:c[1],f=(r=u.match(new RegExp(`${E}=\\["(.*?)"\\]`)))==null?void 0:r[0];if(f?this.remoteChangelog=JSON.parse(f.replace(`${E}=`,"")):console.warn(`[${this.name}] Failed to fetch remote changelog`),this.remoteHash&&this.remoteVersion){const v=this.version.split(".").map(Number),C=this.remoteVersion.split(".").map(Number);for(let l=0;l<v.length;l++){if(C[l]>v[l])return this.showUpdateDialog({version:this.remoteVersion,changelog:this.remoteChangelog});if(C[l]<v[l])return console.log(`[${this.name}] Remote version is older than local version`)}if(this.remoteHash!==this.hash)return this.showUpdateDialog({hash:this.remoteHash})}!e||F.show({title:"Plugin Updater",body:`No update available for ${this.name}`,confirmText:"OK"})},showUpdateDialog({version:e,hash:o,changelog:i}){if(!e&&!o)return console.error(`[${this.name}] Missing parameters in showUpdateDialog()`);let a="";e?a=`New Version for ${this.name} is available!`:a=`New Build for ${this.name} is available!`,a+=`
Would you like to update now?`,i&&(a+=`

Changelog:
- ${i.join(`
- `)}`),F.show({title:"Plugin Updater",body:a,confirmText:"Update",cancelText:"No",onConfirm:()=>{D(this.name,"_didUpdate",!0),this.installPlugin(!!o)}})},installPlugin(e=!1){var o;const i=e?"updated Build":"updated Version",a=e?`\`${(o=this.remoteHash)==null?void 0:o.slice(0,7)}\``:this.remoteVersion;window.enmity.plugins.installPlugin(`${this.rawUrl}?${Math.random()}`,({data:s})=>{s==="installed_plugin"||s==="overridden_plugin"?F.show({title:`Installed ${this.name} v${this.remoteVersion}`,body:`Successfully ${i} to **${a}**.
Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Later",onConfirm:he}):console.error(`[${this.name}] Failed to install v${a}`)})}};R.create(A);var ue=({settings:e})=>{const o=H.createThemedStyleSheet({item:{color:h.ThemeColorMap.TEXT_MUTED},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},main_text:{opacity:.975,letterSpacing:.25},header:{color:h.ThemeColorMap.HEADER_PRIMARY,fontFamily:h.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:h.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),[i,a]=n.useState(),[s,c]=n.useState();return n.createElement(n.Fragment,null,n.createElement(q,{onTouchStart:r=>{a(r.nativeEvent.pageX),c(r.nativeEvent.pageY)},onTouchEnd:r=>{i-r.nativeEvent.pageX<-100&&s-r.nativeEvent.pageY<40&&s-r.nativeEvent.pageY>-40&&te.pop()}},n.createElement(b,null,n.createElement(b,{style:o.text_container},n.createElement(g,{style:[o.main_text,o.header]},U),n.createElement(b,{style:{flexDirection:"row"}},n.createElement(g,{style:[o.main_text,o.sub_header]},"Author:"),n.createElement(g,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:h.Fonts.DISPLAY_BOLD}]},` ${z.map(r=>r.name).join(", ")}`)),n.createElement(b,{style:{flexDirection:"row"}},n.createElement(g,{style:[o.main_text,o.sub_header]},"Version:"),n.createElement(g,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:h.Fonts.DISPLAY_BOLD}]},` ${L}`)),n.createElement(b,{style:{flexDirection:"row"}},n.createElement(g,{style:[o.main_text,o.sub_header]},"Hash:"),n.createElement(g,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:h.Fonts.DISPLAY_BOLD}]},` ${K.slice(0,7)}`)))),n.createElement(B,{title:"Updates"},n.createElement(p,{label:"Check for Updates on startup",subLabel:"Checks automatically for updates when starting the Plugin",trailing:n.createElement(Q,{value:e.getBoolean("autoUpdateCheck",!0),onValueChange:()=>e.toggle("autoUpdateCheck",!0)})}),n.createElement(p,{label:"Check for Updates",trailing:p.Arrow,onPress:()=>R.checkForUpdates(!0)}),n.createElement(p,{label:"Show Changelog",subLabel:`Shows the changelog for v${L}`,trailing:p.Arrow,onPress:()=>R.showChangelog(),disabled:!G.length})),n.createElement(B,{title:"Source"},n.createElement(p,{label:"Source",subLabel:`See the Source Code for ${U}`,trailing:p.Arrow,onPress:()=>ne.openURL(j)}))))};const N=1<<2,[we,X,ge]=Z($.byProps("getChannel"),$.byProps("openLazy","hideActionSheet"),$.byProps("getChannelPermissions")),k=ce(A.name),pe={...A,onStart(){k.before(X,"openLazy",(e,[o,i,a])=>{const s=a==null?void 0:a.message;i!=="MessageLongPressActionSheet"||!s||o.then(c=>{const r=k.after(c,"default",(T,u,y)=>{n.useEffect(()=>()=>{r()},[]);const d=de(y,l=>Array.isArray(l)&&l.length>0?l.some(w=>{var I,M;return((I=w==null?void 0:w.type)==null?void 0:I.name)==="ButtonRow"&&((M=w==null?void 0:w.props)==null?void 0:M.label)===O.Messages.DELETE_MESSAGE}):!1);if(!d)return y;const _=we.getChannel(s.channel_id),m=!!(s.flags&N),E=!!(ge.getChannelPermissions({id:s.channel_id})&h.Permissions.EMBED_LINKS);if(!m&&!s.embeds.length||s.author.id===oe.getCurrentUser().id&&!E)return y;const f=d==null?void 0:d.findIndex(l=>{var w;return((w=l.props)==null?void 0:w.label)===O.Messages.DELETE_MESSAGE});if(f===-1)return y;const v=m?`Unsuppress Embed${m?"s":""}`:`Suppress Embed${m?"s":""}`,C=W(m?"RetryIcon":"ic_close_16px");d.splice(f,0,n.createElement(se,{label:v,color:m?null:"danger",icon:C,onPress:()=>{ee.patch({url:`/channels/${_.id}/messages/${s.id}`,body:{flags:m?s.flags&~N:s.flags|N}}),X.hideActionSheet()}}))})})})},onStop(){k.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(ue,{settings:e})}};me(pe);
